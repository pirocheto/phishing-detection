stages:
  # Download data from source.
  download_data:
    cmd: wget -q ${data_url} -O ${path.data_all}
    # Set Frozen=True to prevent the step from being re-executed.
    frozen: False
    params:
      - data_url
      - path.data_all
    deps:
      - ${data_url}
    outs:
      - ${path.data_all}

  # Split the dataframe and generate a plot to easily
  # view the data size later.
  split_data:
    cmd: python src/split_data.py
    params:
      - train_test_split
      - column_mapping
      - path.data_all
      - path.data_train_raw
      - path.data_test_raw
      - path.data_proportion
      - plt_style
    deps:
      - src/split_data.py
      - ${path.data_all}
    plots:
      - ${path.data_proportion}:
          cache: False
    outs:
      - ${path.data_train_raw}
      - ${path.data_test_raw}

  preprocessing:
    cmd: python src/preprocessing.py
    params:
      - target_preprocessing
      - feature_preprocessing
      - path.data_train_raw
      - path.data_test_raw
      - path.data_train_transformed
      - path.data_test_transformed
      - column_mapping
    deps:
      - src/preprocessing.py
      - ${path.data_train_raw}
      - ${path.data_test_raw}

  # Remove the least important features
  # to accelerate training and make interpretation easier
  feature_selection:
    cmd: python src/feature_selection.py
    params:
      - column_mapping
      - feature_selection
      - path.data_train_transformed
      - path.data_test_transformed
      - path.data_train_selected
      - path.data_test_selected
      - path.correlation_matrix
      - path.selected_features
      - plt_style
    deps:
      - ${path.data_all}
      - src/feature_selection.py
    plots:
      - ${path.correlation_matrix}:
          cache: False
    outs:
      - ${path.selected_features}:
          cache: False

  train_model:
    cmd: python src/train_model.py
    params:
      - path.data_train_selected
      - column_mapping
      - path.selected_features
      - pipeline
      - path.model_bin
    deps:
      - src/train_model.py
      - ${path.data_train_selected}
      - ${path.selected_features}
    outs:
      - ${path.model_bin}

  test_model:
    cmd: python src/test_model.py
    params:
      - path.data_test_selected
      - path.data_test_predicted
      - column_mapping
      - path.model_bin
      - path.metrics
      - path.confusion_matrix
      - path.roc_curve
      - path.score_distribution
      - path.precision_recall_curve
      - path.calibration_curve
      - path.cumulative_distribution
      - path.metrics_table
      - path.classification_report
      - path.selected_features
      - plt_style
    deps:
      - src/test_model.py
      - ${path.data_test_selected}
      - ${path.model_bin}
    plots:
      - ${path.confusion_matrix}:
          cache: False
      - ${path.roc_curve}:
          cache: False
      - ${path.score_distribution}:
          cache: False
      # - ${path.precision_recall_curve}:
      #     cache: False
      # - ${path.cumulative_distribution}:
      #     cache: False
      # - ${path.calibration_curve}:
      #     cache: False
      # - ${path.metrics_table}:
      #     cache: False
      # - ${path.classification_report}:
      #     cache: False
    outs:
      - ${path.data_test_predicted}:
          cache: False
    metrics:
      - ${path.metrics}:
          cache: False

  model_interpretation:
    cmd:
      - python src/model_interpretation.py
    params:
      - path.data_test_selected
      - path.data_train_selected
      - column_mapping
      - path.model_bin
      - path.feature_importances
      - path.selected_features
      - plt_style
    deps:
      - src/model_interpretation.py
      - ${path.data_train_selected}
      - ${path.data_train_selected}
      - ${path.model_bin}
      - ${path.selected_features}
    plots:
      - ${path.feature_importances}:
          cache: False
