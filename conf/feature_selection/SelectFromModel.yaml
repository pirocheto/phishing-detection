# Feature ranking with recursive feature elimination.
# https://scikit-learn.org/stable/modules/generated/sklearn.feature_selection.SelectFromModel.html#sklearn.feature_selection.SelectFromModel
_target_: sklearn.feature_selection.SelectFromModel

# The base estimator from which the transformer is built.
# This can be both a fitted (if prefit is set to True) or a non-fitted estimator.
# The estimator should have a feature_importances_ or coef_ attribute after fitting.
# Otherwise, the importance_getter parameter should be used.estimator:
estimator:
  _target_: sklearn.tree.DecisionTreeClassifier

# The threshold value to use for feature selection.
# Features whose absolute importance value is greater or equal are kept while the others are discarded.
# If “median” (resp. “mean”), then the threshold value is the median (resp. the mean) of the feature importances.
# A scaling factor (e.g., “1.25*mean”) may also be used. If None and if the estimator has a parameter penalty set to l1, either explicitly or implicitly (e.g, Lasso), the threshold used is 1e-5.
# Otherwise, “mean” is used by default.
threshold: null

# Whether a prefit model is expected to be passed into the constructor directly or not.
# If True, estimator must be a fitted estimator.
# If False, estimator is fitted and updated by calling fit and partial_fit, respectively.
prefit: False

# Order of the norm used to filter the vectors of coefficients below threshold in the case where the coef_ attribute of the estimator is of dimension 2.
norm_order: 1

# The maximum number of features to select.
# If an integer, then it specifies the maximum number of features to allow.
# If a callable, then it specifies how to calculate the maximum number of features allowed by using the output of max_features(X).
# If None, then all features are kept.
max_features: null

# If ‘auto’, uses the feature importance either through a coef_ attribute or feature_importances_ attribute of estimator.
# Also accepts a string that specifies an attribute name/path for extracting feature importance (implemented with attrgetter).
# For example, give regressor_.coef_ in case of TransformedTargetRegressor or named_steps.clf.feature_importances_ in case of Pipeline with its last step named clf.
# If callable, overrides the default feature importance getter. The callable is passed with the fitted estimator and it should return importance for each feature.
importance_getter: auto
